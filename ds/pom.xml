<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright Â© 2017 Red Hat, Inc. and others. All rights reserved.
 This program and the accompanying materials are made available under the
 terms of the Eclipse Public License v1.0 which accompanies this distribution,
 and is available at http://www.eclipse.org/legal/epl-v10.html
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.opendaylight.etcd</groupId>
    <artifactId>bundle-parent</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <relativePath>../bundle-parent</relativePath>
  </parent>

  <artifactId>ds</artifactId>
  <packaging>bundle</packaging>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>jetcd</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.opendaylight.infrautils</groupId>
      <artifactId>infrautils-util</artifactId>
    </dependency>
    <dependency>
      <!--  required to avoid java.lang.NoClassDefFoundError: org/opendaylight/yangtools/yang/binding/ChildOf,
            Caused by: java.lang.ClassNotFoundException: org.opendaylight.yangtools.yang.binding.ChildOf, in tests. -->
      <groupId>org.opendaylight.mdsal</groupId>
      <artifactId>yang-binding</artifactId>
    </dependency>
    <dependency>
      <groupId>org.opendaylight.controller</groupId>
      <artifactId>sal-core-spi</artifactId>
    </dependency>
    <dependency>
      <groupId>org.opendaylight.mdsal</groupId>
      <artifactId>mdsal-dom-inmemory-datastore</artifactId>
    </dependency>
    <dependency>
      <groupId>org.opendaylight.controller</groupId>
      <!-- TODO Remove this CDS dependency by refactoring upstream;
           This is only here so we can use the NormalizedNodeOutputStreamWriter (which isn't even public; I locally hacked it)
           and the NormalizedNodeInputStreamReader. -->
      <artifactId>sal-clustering-commons</artifactId>
    </dependency>
    <dependency>
      <groupId>ch.vorburger.dom2kv</groupId>
      <artifactId>dom2kv</artifactId>
      <version>1.0.0-SNAPSHOT</version>
    </dependency>

    <!-- TODO remove awaitility & hamcrest-core when RevAwaiter is rewritten -->
    <dependency>
      <groupId>org.awaitility</groupId>
      <artifactId>awaitility</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-core</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-library</artifactId>
      <scope>compile</scope>
    </dependency>

    <!-- Dependencies required (only) by EtcdDataBrokerWiring.. TODO move into new wiring/ artifact? -->
    <dependency>
      <groupId>org.opendaylight.mdsal</groupId>
      <artifactId>mdsal-binding-dom-adapter</artifactId>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>test-model</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.opendaylight.infrautils</groupId>
      <artifactId>infrautils-testutils</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <configuration>
          <instructions>
            <Import-Package>!io.etcd.jetcd.shaded.com.google.protobuf,*</Import-Package>
          </instructions>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
